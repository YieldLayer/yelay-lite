{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xeac44dC9bB6E6CEf3F832FF5ee32455e5E9082BB",
      "txHash": "0x413abd005982c614af586cda50767876dbdef6e208ace7caf10f436332f5acda",
      "kind": "uups"
    },
    {
      "address": "0x81fD020bBf55934e1E2A045789b24465c90385B7",
      "txHash": "0x91a7b351d54fb43c088be2354a8e45041c10d3e234dd703a1f9286170608769c",
      "kind": "uups"
    },
    {
      "address": "0x98732e2FEb854bAd400D4b5336f4439E7E53fe88",
      "txHash": "0x34b93fe2d6c5ae5ca27392b7c003902a14d576d98c5c70fe7704baa4df480df4",
      "kind": "uups"
    },
    {
      "address": "0x0872e8391662D4e53D6649c8dE5d4bF581Bd778C",
      "txHash": "0x42dddc88e97f21ab20f50ad9187e462d7f64dd20b9b695f48929a3709b20789e",
      "kind": "uups"
    },
    {
      "address": "0x16dB68C86EDFdB60ba733563326ed392B319EB2B",
      "txHash": "0x98ecfc7d9de44351dc586fae1ade94616e45a7fb177dac9a0c67289bd764c2ef",
      "kind": "uups"
    },
    {
      "address": "0xB84B621D3da3E5e47A1927883C685455Ad731D7C",
      "txHash": "0x1657a444a39731300775957d81b5a3fc8655c4713d57630a0e8cfe46c13c7d8b",
      "kind": "uups"
    }
  ],
  "impls": {
    "7a08d1612f3fffb168210b5cb782be5d10f94cf2cbbda3626562b595df4bc037": {
      "address": "0x7E08653158182A402b3a788E75A125c876c5ECe5",
      "txHash": "0xc4bc250af2aa524afc20eb0acad35554c4e7ceff7a253b4af86c4074456b2607",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "exchangeAllowlist",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Swapper",
            "src": "src/Swapper.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)2599_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)2443_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "72b38dc72057cef0ea657d255d70cf7d18c5940883db63b5096897dc2db0caf9": {
      "address": "0x5163531a1BBA8E5616D20a313F9eCfAc350c38a0",
      "txHash": "0x0439b79425cec10605030dc6ab9bbdbb30bbbcedbf576ce4c45b901a02d3e5bb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)2599_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)2443_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9fdbd9883ceed11ad42b14927dc8254a2d8d081280a8e331747b9d9cf4440bcb": {
      "address": "0x119242eebdA97066045A6E175e508AAeedBe8b68",
      "txHash": "0x5d570ff576aa26f7b4956796581a68f7d784b3c7e778c957c788fce940656d2b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)307_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "76914389eba20224cb9747df7960dc0688476904a823ecf822ee67c064563d73": {
      "address": "0x5ad91B2f07a5fb7BA13C39940fa16826e9bBd5b9",
      "txHash": "0x2ac125c7e604f416b116ad754c2a2872bbe3fd484a925990f7df20deb46ef669",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "lockedDeposits",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Deposit)14677_storage)dyn_storage)))",
            "contract": "DepositLockPlugin",
            "src": "src/plugins/DepositLockPlugin.sol:60"
          },
          {
            "label": "globalLockedShares",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "DepositLockPlugin",
            "src": "src/plugins/DepositLockPlugin.sol:65"
          },
          {
            "label": "projectLockPeriods",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "DepositLockPlugin",
            "src": "src/plugins/DepositLockPlugin.sol:71"
          },
          {
            "label": "projectGlobalUnlockTime",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "DepositLockPlugin",
            "src": "src/plugins/DepositLockPlugin.sol:77"
          },
          {
            "label": "projectLockModes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_enum(LockMode)14671))",
            "contract": "DepositLockPlugin",
            "src": "src/plugins/DepositLockPlugin.sol:83"
          },
          {
            "label": "depositPointers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "DepositLockPlugin",
            "src": "src/plugins/DepositLockPlugin.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)307_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Deposit)14677_storage)dyn_storage": {
            "label": "struct DepositLockPlugin.Deposit[]",
            "numberOfBytes": "32"
          },
          "t_enum(LockMode)14671": {
            "label": "enum DepositLockPlugin.LockMode",
            "members": [
              "Unset",
              "Variable",
              "Global"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Deposit)14677_storage)dyn_storage)": {
            "label": "mapping(address => struct DepositLockPlugin.Deposit[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_enum(LockMode)14671))": {
            "label": "mapping(address => mapping(uint256 => enum DepositLockPlugin.LockMode))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Deposit)14677_storage)dyn_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct DepositLockPlugin.Deposit[])))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(LockMode)14671)": {
            "label": "mapping(uint256 => enum DepositLockPlugin.LockMode)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Deposit)14677_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DepositLockPlugin.Deposit[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Deposit)14677_storage": {
            "label": "struct DepositLockPlugin.Deposit",
            "members": [
              {
                "label": "shares",
                "type": "t_uint192",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockTime",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin-upgradeable/contracts/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a9174e45cd388c204f657f00d769fa2cb84d267595040a1b76b429c1f72a9b0f": {
      "address": "0x655f41973caF96b0aF68ABE732b50022c95374e7",
      "txHash": "0x7d413c7246eebc5790c12ebb5e150d0e64117bcfd8b4ca4e67e6d9937e1722bb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "cycleCount",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "YieldExtractor",
            "src": "src\\YieldExtractor.sol:88"
          },
          {
            "label": "roots",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Root)8309_storage))",
            "contract": "YieldExtractor",
            "src": "src\\YieldExtractor.sol:94"
          },
          {
            "label": "isLeafClaimed",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "YieldExtractor",
            "src": "src\\YieldExtractor.sol:99"
          },
          {
            "label": "yieldSharesClaimed",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "YieldExtractor",
            "src": "src\\YieldExtractor.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlDefaultAdminRulesStorage)175_storage": {
            "label": "struct AccessControlDefaultAdminRulesUpgradeable.AccessControlDefaultAdminRulesStorage",
            "members": [
              {
                "label": "_pendingDefaultAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_pendingDefaultAdminSchedule",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "_currentDelay",
                "type": "t_uint48",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "_currentDefaultAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_pendingDelay",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "_pendingDelaySchedule",
                "type": "t_uint48",
                "offset": 26,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)600_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Root)8309_storage))": {
            "label": "mapping(address => mapping(uint256 => struct YieldExtractor.Root))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Root)8309_storage)": {
            "label": "mapping(uint256 => struct YieldExtractor.Root)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Root)8309_storage": {
            "label": "struct YieldExtractor.Root",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControlDefaultAdminRules": [
            {
              "contract": "AccessControlDefaultAdminRulesUpgradeable",
              "label": "_pendingDefaultAdmin",
              "type": "t_address",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\extensions\\AccessControlDefaultAdminRulesUpgradeable.sol:45",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessControlDefaultAdminRulesUpgradeable",
              "label": "_pendingDefaultAdminSchedule",
              "type": "t_uint48",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\extensions\\AccessControlDefaultAdminRulesUpgradeable.sol:46",
              "offset": 20,
              "slot": "0"
            },
            {
              "contract": "AccessControlDefaultAdminRulesUpgradeable",
              "label": "_currentDelay",
              "type": "t_uint48",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\extensions\\AccessControlDefaultAdminRulesUpgradeable.sol:48",
              "offset": 26,
              "slot": "0"
            },
            {
              "contract": "AccessControlDefaultAdminRulesUpgradeable",
              "label": "_currentDefaultAdmin",
              "type": "t_address",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\extensions\\AccessControlDefaultAdminRulesUpgradeable.sol:49",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "AccessControlDefaultAdminRulesUpgradeable",
              "label": "_pendingDelay",
              "type": "t_uint48",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\extensions\\AccessControlDefaultAdminRulesUpgradeable.sol:52",
              "offset": 20,
              "slot": "1"
            },
            {
              "contract": "AccessControlDefaultAdminRulesUpgradeable",
              "label": "_pendingDelaySchedule",
              "type": "t_uint48",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\extensions\\AccessControlDefaultAdminRulesUpgradeable.sol:53",
              "offset": 26,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin-upgradeable\\contracts\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
